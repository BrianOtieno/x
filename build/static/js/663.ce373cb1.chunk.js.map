{"version":3,"file":"static/js/663.ce373cb1.chunk.js","mappings":"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","sources":["app/charts/ChartJs.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport {Line, Bar, Doughnut, Pie, Scatter} from 'react-chartjs-2';\n\nexport class ChartJs extends Component {\n\n    data = {\n        labels: [\"2013\", \"2014\", \"2014\", \"2015\", \"2016\", \"2017\"],\n        datasets: [{\n          label: '# of Votes',\n          data: [10, 19, 3, 5, 2, 3],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)'\n          ],\n          borderColor: [\n            'rgba(255,99,132,1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n          ],\n          borderWidth: 1,\n          fill: false\n        }]\n    };\n\n    options = {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          },\n          gridLines: {\n            color: \"rgba(204, 204, 204,0.1)\"\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            color: \"rgba(204, 204, 204,0.1)\"\n          }\n        }]\n      },\n      legend: {\n        display: false\n      },\n      elements: {\n        point: {\n          radius: 0\n        }\n      }\n    }\n\n    areaData = {\n        labels: [\"2013\", \"2014\", \"2015\", \"2016\", \"2017\"],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)'\n          ],\n          borderColor: [\n            'rgba(255,99,132,1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n          ],\n          borderWidth: 1,\n          fill: true, // 3: no fill\n        }]\n    };\n\n    areaOptions = {\n        plugins: {\n          filler: {\n            propagate: true\n          }\n        },\n        scales: {\n          yAxes: [{\n            gridLines: {\n              color: \"rgba(204, 204, 204,0.1)\"\n            }\n          }],\n          xAxes: [{\n            gridLines: {\n              color: \"rgba(204, 204, 204,0.1)\"\n            }\n          }]\n        }\n    }\n\n    doughnutPieData = {\n        datasets: [{\n          data: [30, 40, 30],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.5)',\n            'rgba(54, 162, 235, 0.5)',\n            'rgba(255, 206, 86, 0.5)',\n            'rgba(75, 192, 192, 0.5)',\n            'rgba(153, 102, 255, 0.5)',\n            'rgba(255, 159, 64, 0.5)'\n          ],\n          borderColor: [\n            'rgba(255,99,132,1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)'\n          ],\n        }],\n    \n        // These labels appear in the legend and in the tooltips when hovering different arcs\n        labels: [\n          'Pink',\n          'Blue',\n          'Yellow',\n        ]\n    };\n\n    doughnutPieOptions = {\n        responsive: true,\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        }\n    };\n\n    scatterChartData = {\n        datasets: [{\n          label: 'First Dataset',\n          data: [{\n            x: -10,\n            y: 0\n          },\n          {\n            x: 0,\n            y: 3\n          },\n          {\n            x: -25,\n            y: 5\n          },\n          {\n            x: 40,\n            y: 5\n          }\n          ],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)'\n          ],\n          borderColor: [\n            'rgba(255,99,132,1)'\n          ],\n          borderWidth: 1\n        },\n        {\n          label: 'Second Dataset',\n          data: [{\n            x: 10,\n            y: 5\n          },\n          {\n            x: 20,\n            y: -30\n          },\n          {\n            x: -25,\n            y: 15\n          },\n          {\n            x: -10,\n            y: 5\n          }\n          ],\n          backgroundColor: [\n            'rgba(54, 162, 235, 0.2)',\n          ],\n          borderColor: [\n            'rgba(54, 162, 235, 1)',\n          ],\n          borderWidth: 1\n        }\n        ]\n    }\n\n    scatterChartOptions = {\n      scales: {\n        xAxes: [{\n          type: 'linear',\n          position: 'bottom',\n          gridLines: {\n            color: \"rgba(204, 204, 204,0.1)\"\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            color: \"rgba(204, 204, 204,0.1)\"\n          }\n        }]\n      }\n    }\n      \n    render() {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Chart-js\n                    </h3>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Charts</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Chart-js</li>\n                        </ol>\n                    </nav>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Line Chart</h4>\n                                <Line data={this.data} options={this.options} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Bar Chart</h4>\n                                <Bar data={this.data} options={this.options} />    \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Area Chart</h4>\n                                <Line data={this.areaData} options={this.areaOptions} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Doughnut Chart</h4>\n                                <Doughnut data={this.doughnutPieData} options={this.doughnutPieOptions} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Pie Chart</h4>\n                                <Pie data={this.doughnutPieData} options={this.doughnutPieOptions} />                                \n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Scatter Chart</h4>\n                                <Scatter data={this.scatterChartData} options={this.scatterChartOptions} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ChartJs\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  chart.options = { ...nextOptions };\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options,\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types';\nimport { Chart } from './chart';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["ChartJs","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","fill","options","scales","yAxes","ticks","beginAtZero","gridLines","color","xAxes","legend","display","elements","point","radius","areaData","areaOptions","plugins","filler","propagate","doughnutPieData","doughnutPieOptions","responsive","animation","animateScale","animateRotate","scatterChartData","x","y","scatterChartOptions","type","position","className","href","onClick","event","preventDefault","this","Component","defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","map","nextDataset","currentDataset","find","dataset","includes","push","Object","assign","cloneData","nextData","ChartComponent","param","height","width","redraw","fallbackContent","updateMode","props","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","destroy","useEffect","chart","nextOptions","config","setTimeout","update","canvas","role","Chart","forwardRef","createTypedChart","registerables","Line","LineController","Bar","BarController","Doughnut","RadarController","DoughnutController","Pie","PolarAreaController","BubbleController","PieController","Scatter","ScatterController"],"sourceRoot":""}