{"version":3,"file":"static/js/500.06762d91.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.slice(pos, idx)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { toFont as $, _rlookupByKey as A, _isPointInArea as B, getAngleFromPoint as C, toPadding as D, each as E, getMaximumSize as F, _getParentNode as G, HALF_PI as H, readUsedSize as I, throttled as J, supportsEventListenerOptions as K, _isDomSupported as L, log10 as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, toDegrees as S, TAU as T, _measureText as U, _int16Range as V, _alignPixel as W, clipArea as X, renderText as Y, unclipArea as Z, _arrayUnique as _, resolve as a, QUARTER_PI as a$, _toLeftRightCenter as a0, _alignStartEnd as a1, overrides as a2, merge as a3, _capitalize as a4, descriptors as a5, isFunction as a6, _attachContext as a7, _createResolver as a8, _descriptors as a9, _textX as aA, restoreTextDirection as aB, noop as aC, distanceBetweenPoints as aD, _setMinAndMaxByKey as aE, niceNum as aF, almostWhole as aG, almostEquals as aH, _decimalPlaces as aI, _longestText as aJ, _filterBetween as aK, _lookup as aL, isPatternOrGradient as aM, getHoverColor as aN, clone$1 as aO, _merger as aP, _mergerIf as aQ, _deprecated as aR, toFontString as aS, splineCurve as aT, splineCurveMonotone as aU, getStyle as aV, fontString as aW, toLineHeight as aX, PITAU as aY, INFINITY as aZ, RAD_PER_DEG as a_, mergeIf as aa, uid as ab, debounce as ac, retinaScale as ad, clearCanvas as ae, setsEqual as af, _elementsEqual as ag, _isClickEvent as ah, _isBetween as ai, _readValueToProps as aj, _updateBezierControlPoints as ak, _computeSegments as al, _boundSegments as am, _steppedInterpolation as an, _bezierInterpolation as ao, _pointInLine as ap, _steppedLineTo as aq, _bezierCurveTo as ar, drawPoint as as, addRoundedRectPath as at, toTRBL as au, toTRBLCorners as av, _boundSegment as aw, _normalizeAngle as ax, getRtlAdapter as ay, overrideTextDirection as az, isArray as b, TWO_THIRDS_PI as b0, _angleDiff as b1, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","slice","ticking","rest","_toLeftRightCenter","align","_alignStartEnd","start","end","uid","id","isNullOrUndef","isArray","type","toString","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","x","y","epsilon","abs","_setMinAndMaxByKey","array","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","node","split","set","root","scope","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","push","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","forEach","_arrayUnique","items","Set","add","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","override","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","constructor","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","delta","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","pop","_notify","charts","complete","progress","event","cb","_getAnims","reduce","acc","cur","_duration","cancel","animator","interpolators","boolean","factor","c0","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","update","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","getUserBounds","minDefined","maxDefined","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","_sync","newCount","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","last","grouped","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","abstract","DateAdapter","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","padding","autoPadding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","Registry","controllers","_typedRegistries","_each","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","WeakMap","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","textDirection","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","labelCount","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}