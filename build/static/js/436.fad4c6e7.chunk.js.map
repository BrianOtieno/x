{"version":3,"file":"static/js/436.fad4c6e7.chunk.js","mappings":"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","sources":["app/presidential/_components/PollingDataTable.js","app/presidential/_components/EditRow.js","app/file-upload/theme.js","app/file-upload/components/CameraModal.js","app/presidential/Presidential.js"],"sourcesContent":["import React from 'react'\n\nfunction PollingDataTable({ dbPollingData, handleRowEdit, handleDelete }) {\n    return (\n        <>\n            <tr key={dbPollingData.id}>\n                <td>\n                    <div className=\"form-check form-check-muted m-0\">\n                        <img src={require('../../../assets/images/dps/obrienotieno.jpeg')} alt=\"face\" />\n                    </div>\n                </td>\n                <td>\n\n                    {dbPollingData.candidate}\n\n                </td>\n                <td> {dbPollingData.cname} </td>\n                <td> {dbPollingData.scname} </td>\n                <td> {dbPollingData.pollingstation} </td>\n                {/* <td> Credit card </td> */}\n                <td> {dbPollingData.votes} </td>\n                <td>\n                    <button type='button' onClick={(e) => handleRowEdit(e, dbPollingData)} className=\"btn btn-outline-success\" style={{ marginRight: \"3px\" }}>  <i className=\"mdi mdi-circle-edit-outline btn-icon-append\"></i>Edit </button>\n                    {/* <span style={{ margin: \"1px\" }} /> */}\n                    <button onClick={handleDelete} type='button' className=\"btn btn-outline-danger \" > <i className=\"mdi mdi-delete-circle-outline btn-icon-append\"></i> Delete</button>\n                </td>\n            </tr >\n\n        </>\n    )\n}\n\nexport default PollingDataTable","import { React, useState } from 'react'\nimport { ClipLoader } from 'react-spinners'\nimport Loading from '../../loaders/Loading'\n\nconst override = {\n    display: \"block\",\n    margin: \"0 auto\",\n    borderColor: \"red\"\n}\n\n\n\nfunction EditRow({ editFormData, handleInputChange, handleRowEditSubmit, handleCanel, isLoading }) {\n    let [color, setColor] = useState(\"#f0f\");\n    const doNothing = () => {\n\n    }\n\n    return (\n\n        <tr>\n            <td>\n                <div className=\"form-check form-check-muted m-0\">\n                    <img src={require('../../../assets/images/dps/obrienotieno.jpeg')} alt=\"face\" />\n                </div>\n            </td>\n            <td><input type=\"text\" name=\"candidate\" value={editFormData.candidate} onChange={doNothing} placeholder='Enter Candidate' className=\"form-control form-control-sm\" /></td>\n            <td width={100}> <input type=\"text\" name=\"county\" value={editFormData.cname} onChange={doNothing} placeholder='County' className=\"form-control form-control-sm\" /> </td>\n            <td> <input type=\"text\" name=\"subcounty\" value={editFormData.scname} onChange={doNothing} placeholder='Sub-county' className=\"form-control form-control-sm\" /> </td>\n            <td> <input type=\"text\" name=\"pollingstation\" value={editFormData.pollingstation} onChange={doNothing} placeholder='Polling Station' className=\"form-control form-control-sm\" /> </td>\n            {/* {editFormData.candidate == \"Raila Odinga\" && <td width={100}> <input type=\"number\" value={editFormData.votes} onChange={handleInputChange} name=\"votes\" placeholder='Votes' className=\"form-control form-control-sm\" min={0}\n                style={{ color: \"red\", backgroundColor: 'orange' }} />  </td>} */}\n            {editFormData.candidate.includes(\"Raila\") ? <td width={100}> <input type=\"number\" value={editFormData.votes} onChange={handleInputChange} name=\"votes\" placeholder='Votes' className=\"form-control form-control-sm\" min={0}\n                style={{ color: \"white\", backgroundColor: 'blue' }} />  </td> :\n                editFormData.candidate.includes(\"Ruto\") ? <td width={100}> <input type=\"number\" value={editFormData.votes} onChange={handleInputChange} name=\"votes\" placeholder='Votes' className=\"form-control form-control-sm\" min={0}\n                    style={{ color: \"black\", backgroundColor: 'yellow' }} />  </td> :\n                    editFormData.candidate.includes(\"Wajackoyah\") ? <td width={100}> <input type=\"number\" value={editFormData.votes} onChange={handleInputChange} name=\"votes\" placeholder='Votes' className=\"form-control form-control-sm\" min={0}\n                        style={{ color: \"orange\", backgroundColor: 'green' }} />  </td> :\n                        <td width={100}> <input type=\"number\" value={editFormData.votes} onChange={handleInputChange} name=\"votes\" placeholder='Votes' className=\"form-control form-control-sm\" min={0}\n                            style={{ color: \"red\", backgroundColor: 'black' }} /> </td>}\n            {/* else{\n                <td width={100}> <input type=\"number\" value={editFormData.votes} onChange={handleInputChange} name=\"votes\" placeholder='Votes' className=\"form-control form-control-sm\" min={0}\n                    style={{ color: \"red\", backgroundColor: 'black' }} /> </td>\n            } */}\n\n            <td>\n                <button type='button' onClick={handleRowEditSubmit} className=\"btn btn-outline-primary\" > Save</button>\n                <span style={{ margin: \"3px\" }}>  </span>\n                <button type='button' onClick={handleCanel} className=\"btn btn-outline-info\"> Cancel</button>\n                {isLoading ?\n                    <ClipLoader color={color} loading={isLoading} cssOverride={override} size={150} />\n                    : \"\"}\n            </td>\n        </tr>\n    )\n}\n\nexport default EditRow","import { grommet } from \"grommet/themes\";\r\nimport { deepMerge } from \"grommet/utils\";\r\n\r\nconst theme = deepMerge(grommet, {\r\n  global: {\r\n    colors: {\r\n      brand: \"#558b2f\",\r\n      \"accent-1\": \"#FFD700\",\r\n      \"brand-mobi\": \"#e5eec3\",\r\n      // placeholder: \"#e5eec3\",\r\n      error: \"#A63232\"\r\n    },\r\n    drop: {\r\n      background: \"brand\",\r\n      shadowSize: \"medium\",\r\n      extend: `\r\n          border-bottom-left-radius: 12px;\r\n          border-bottom-right-radius: 12px;\r\n        \r\n          overflow: hidden;\r\n        `\r\n    },\r\n    elevation: {\r\n      dark: {\r\n        medium: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\"\r\n      },\r\n      light: {\r\n        medium: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\"\r\n      }\r\n    },\r\n    input: {\r\n      weight: 400\r\n    },\r\n    font: {\r\n      family: \"Segoe UI Light\", // 'Roboto',\r\n      size: \"1em\", // '14px',\r\n      height: \"4rem\", // '20px',\r\n      style: \"normal\"\r\n    },\r\n    button: {\r\n      border: {\r\n        color: \"#558b2f\"\r\n      }\r\n    },\r\n    focus: {\r\n      border: {\r\n        color: \"transparent\"\r\n      }\r\n    },\r\n    size: {\r\n      sidebar: \"550px\"\r\n    }\r\n  },\r\n  text: {\r\n    medium: {\r\n      size: \"14px\"\r\n    }\r\n  },\r\n  formField: {\r\n    border: {\r\n      color: \"#558b2f\"\r\n    }\r\n  },\r\n  tab: {\r\n    active: {\r\n      color: \"#FFD700\"\r\n    },\r\n    hover: {\r\n      color: \"#FFD700\"\r\n    },\r\n    color: \"white\",\r\n    border: {\r\n      side: \"bottom\",\r\n      size: \"small\",\r\n      color: {\r\n        dark: \"brand\",\r\n        light: \"brand-mobi\"\r\n      },\r\n      active: {\r\n        color: {\r\n          dark: \"white\",\r\n          light: \"accent-1\"\r\n        }\r\n      },\r\n      hover: {\r\n        color: {\r\n          dark: \"white\",\r\n          light: \"accent-1\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\n\r\nimport { Layer } from \"grommet\";\r\n\r\nexport default ({ children, onClose }) => (\r\n  <Layer position=\"center\" modal onClickOutside={onClose} onEsc={onClose}>\r\n    {children}\r\n  </Layer>\r\n);\r\n","import React, { Fragment, useContext, useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Chart, ArcElement } from 'chart.js'\nimport { VectorMap } from \"react-jvectormap\"\nimport { Form } from 'react-bootstrap';\nimport axios from '../../api/axios';\nimport { UserContext } from '../../contexts/UserContext';\n// import DatePicker from \"react-datepicker\"; \nimport data from \"../../mock-data.json\";\nimport PollingDataTable from './_components/PollingDataTable';\nimport EditRow from './_components/EditRow';\nimport TinyMCE from '../wysiwyg/TinyMCE';\nimport Jurisdiction from './_components/Jurisdiction';\nimport Loading from '../loaders/Loading';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport FileUpload from './_components/FileUpload';\nimport RichTextEditor from \"../file-upload/components/RichTextEditor\";\nimport { ClipLoader } from 'react-spinners';\nimport kenyaCounties from \"../../kenya-counties.json\";\nimport kenyaSubCounties from \"../../kenya-sub-counties.json\";\nimport Select from \"react-select\";\nimport { Box, Button, Keyboard, TextArea, Image, TextInput } from \"grommet\";\nimport { FormClose, Camera, Gallery, Close } from \"grommet-icons\";\nimport CameraModal from \"../file-upload/components/CameraModal\"\nimport WebCamera from \"react-html5-camera-photo\";\nimport { AxiosResponse, AxiosError } from 'axios'\n\nChart.register(ArcElement);\n\nconst override = {\n  display: \"block\",\n  margin: \"0 auto\",\n  borderColor: \"red\"\n}\n\nconst mapData = {\n  // \"BZ\": 75.00,\n  // \"US\": 56.25,\n  // \"AU\": 15.45,\n  // \"GB\": 25.00,\n  // \"RO\": 10.25,\n  // \"GE\": 33.25\n}\n\nconst customStyles = {\n  control: (base, state) => ({\n    ...base,\n    height: \"55px\",\n    background: \"#121212\",\n    // match with the menu\n    borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\n    // Overwrittes the different states of border\n    borderColor: state.isFocused ? \"blue\" : \"green\",\n    // Removes weird border around container\n    boxShadow: state.isFocused ? null : null,\n    \"&:hover\": {\n      // Overwrittes the different states of border\n      borderColor: state.isFocused ? \"green\" : \"blue\"\n    }\n  }),\n  menu: base => ({\n    ...base,\n    // override border radius to match the box\n    borderRadius: 0,\n    // kill the gap\n    marginTop: 0\n  }),\n  menuList: base => ({\n    ...base,\n    background: \"#191f34\",\n    borderColor: \"blue\",\n    // kill the white space on first and last option\n    padding: 0\n  })\n};\n\n\nconst Presidential = () => {\n  const [token] = useContext(UserContext);\n  const [pollingdata, setPollingdata] = useState(data);\n  let [isLoading, setIsLoading] = useState(false);\n  let [isFormSubmitLoading, setIsFormSubmitLoading] = useState(false);\n  let [color, setColor] = useState(\"#f0f\");\n  const timeOut = useRef(null);\n  const [countryCode, setCountryCode] = useState('');\n  const [countiesKenya] = useState(kenyaCounties);\n  const [selectedCounty, setSelectedCounty] = useState(\"\");\n  const [selectedSubCounty, setSelectedSubCounty] = useState(\"\");\n  const [selectedPollingStation, setSelectedPollingStation] = useState({})\n  const [subCountyData] = useState(kenyaSubCounties);\n  const [image, setImage] = useState(\"\");\n  const fileInputRef = useRef(null);\n  const [text, setText] = useState(\"\");\n  const [paragraphs, setParagraphs] = useState([]);\n  const [showCamera, setShowCamera] = useState(false);\n  const [allowEnter, setAllowEnter] = useState(true);\n\n  const [showFormSubmit, setShowFormSubmitted] = useState(false);\n\n  const ApiURL = \"http://127.0.0.1:8080/api/\"\n\n  useEffect(() => {\n    selectedPollingStation && fetch(ApiURL + `auth/pollingdata/` + selectedPollingStation.pstationid, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': 'Bearer ' + token,\n        'Content-Type': 'application/json'\n      }),\n    })\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n        setDbPollingData([...data])\n      })\n  }, [selectedPollingStation])\n\n  useEffect(() => {\n    selectedPollingStation &&\n      fetch(ApiURL + `auth/forms/` + selectedPollingStation.pstationid, {\n        method: 'get',\n        headers: new Headers({\n          'Authorization': 'Bearer ' + token,\n          'Content-Type': 'application/json'\n        }),\n      })\n        .then((response) => {\n          return response.json()\n        }).then((data) => {\n          setImage(data.form)\n        })\n  }, [selectedPollingStation])\n\n\n  //File upload...\n  const openFileDialog = () => {\n    fileInputRef.current.click();\n  };\n\n  const onFilesAdded = (event) => {\n    let file = event.target.files[0];\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const img = e.target.result;\n      // do whatever you want with the file content\n\n      setImage(img);\n\n      // img.onload = () => {\n      //   console.log(img);\n      // };\n      console.log(img);\n    };\n    reader.onabort = () => console.log(\"file reading was aborted\");\n    reader.onerror = () => console.log(\"file reading has failed\");\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const clearStation = () => {\n    setSelectedPollingStation({})\n  }\n\n  const clearSubCounty = () => {\n    setSelectedPollingStation({})\n    setSelectedSubCounty(\"\")\n  }\n\n  const clearCounty = () => {\n    setSelectedPollingStation({})\n    setSelectedSubCounty(\"\")\n    setSelectedCounty(\"\")\n  }\n\n  const handleSetCounty = (e) => {\n    setSelectedCounty(e)\n    setSelectedSubCounty(\"\")\n    setSelectedPollingStation({})\n  }\n  const handleSetSubCounty = (e) => {\n    setSelectedSubCounty(e)\n    setSelectedPollingStation({})\n  }\n\n  const [dbPollingData, setDbPollingData] = useState([])\n\n  const handleSelectedPollingStation = (e) => {\n    setSelectedPollingStation(e)\n\n    fetch(ApiURL + \"auth/pollingdata/\" + selectedPollingStation.pstationid, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': 'Bearer ' + token,\n        'Content-Type': 'application/json'\n      }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        setDbPollingData([...json])\n        console.log(dbPollingData)\n      })\n\n    fetch(ApiURL + \"auth/forms/\" + selectedPollingStation.pstationid, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': 'Bearer ' + token,\n        'Content-Type': 'application/json'\n      }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        setImage(json)\n        console.log(json)\n      })\n\n  }\n  const xCounties = subCountyData.filter(subCountyData =>\n    subCountyData.ccode === selectedCounty.ccode\n  )\n\n  // const [addFormData, setAddFormData] = useState({\n  //   id: \"\",\n  //   // pstationid: \"\",\n  //   candidate: \"\",\n  //   cname: \"\",\n  //   scname: \"\",\n  //   pollingstationid: \"\",\n  //   pollingstation: \"\",\n  //   votes: \"\",\n  // })\n\n  const [editFormData, setEditFormData] = useState({\n    id: \"\",\n    // pstationid: \"\",\n    candidate: \"\",\n    cname: \"\",\n    scname: \"\",\n    pollingstationid: \"\",\n    pollingstation: \"\",\n    votes: \"\",\n  })\n\n  const [editPollingData, setEditPollingData] = useState(null);\n\n  const handleInputChange = (e) => {\n    e.preventDefault();\n\n    const formField = e.target.getAttribute(\"name\");\n    const formFieldValue = e.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[formField] = formFieldValue;\n\n    setEditFormData(newFormData);\n\n  }\n\n  const handleRowEdit = (e, pollingRowData) => {\n    e.preventDefault();\n    setIsLoading(false);\n    setEditPollingData(pollingRowData.id);\n\n    const editFormValues = {\n      // pstationid: pollingRowData.pstationid,\n      id: pollingRowData.id,\n      candidate: pollingRowData.candidate,\n      cname: pollingRowData.cname,\n      scname: pollingRowData.scname,\n      pollingstationid: pollingRowData.pollingstationid,\n      pollingstation: pollingRowData.pollingstation,\n      votes: pollingRowData.votes,\n\n    }\n    setEditFormData(editFormValues);\n  }\n\n  const handleRowEditSubmit = (e) => {\n    e.preventDefault();\n\n\n    if (Math.sign(editFormData.votes) === -1) {\n      return alert(\"votes can not be negative\");\n    }\n\n    setIsLoading(true);\n    clearTimeout(timeOut.current);\n\n    timeOut.current = setTimeout(() => {\n      setIsLoading(false);\n\n      const editedPollingStation = {\n        id: editPollingData,\n        candidate: editFormData.candidate,\n        cname: editFormData.cname,\n        scname: editFormData.scname,\n        pollingstationid: editFormData.pollingstationid,\n        pollingstation: editFormData.pollingstation,\n        votes: editFormData.votes\n      }\n\n      const newPollingData = [...dbPollingData];\n\n      const index = dbPollingData.findIndex((dbPollingData) => dbPollingData.id === editPollingData)\n\n      newPollingData[index] = editedPollingStation;\n\n\n      const UPDATE_PRESIDENTIAL_URL = \"auth/presidential/votes/\" + editPollingData\n      const _requestOptions = {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      }\n      const _votes = { votes: parseInt(editFormData.votes) }\n      try {\n        const response = axios.put(UPDATE_PRESIDENTIAL_URL, _votes, _requestOptions)\n        setDbPollingData(newPollingData);\n        setEditPollingData(null);\n        console.log(_votes)\n      } catch {\n        alert(\"Error occured! Try Again!\")\n      }\n\n    }, 100);\n  }\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n    setEditPollingData(null);\n    setIsLoading(false);\n  }\n\n  const handleDelete = (e, pollingstationid) => {\n    e.preventDefault();\n    const newPollingData = [...pollingdata];\n\n    const index = pollingdata.findIndex((pollingdata) => pollingdata.id === pollingstationid);\n\n    newPollingData.splice(index, 1);\n\n    setPollingdata(newPollingData);\n  }\n\n  const handleForm34A = (e, pollingstationid) => {\n    e.preventDefault();\n    setIsFormSubmitLoading(true);\n    clearTimeout(timeOut.current);\n\n    timeOut.current = setTimeout(() => {\n\n      const UPDATE_FORM34A = \"auth/forms/\" + pollingstationid\n      const _requestOptions = {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      }\n      const _form = { form: image }\n\n      try {\n        const response = axios.put(UPDATE_FORM34A, _form, _requestOptions)\n          .then(res => {\n            setIsFormSubmitLoading(false);\n            setShowFormSubmitted(true);\n          })\n          .catch(function (error) {\n            if (error.response) {\n              setShowFormSubmitted(false);\n            }\n          });\n        // setIsFormSubmitLoading(false);\n        setShowFormSubmitted(true);\n      } catch {\n      }\n      setIsFormSubmitLoading(false);\n    }, 1);\n  }\n\n  const formPollingStation = dbPollingData.filter((obj, pos, dbPollingData) => {\n    return dbPollingData\n      .map(mapObj => mapObj.pollingstationid)\n      .indexOf(obj.pollingstationid) == pos;\n  })\n\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Jurisdiction</h4>\n              <div className=\"row\">\n                <div className=\"col-md-5\">\n                  <Form.Group>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control form-control-lg\" defaultValue={countryCode} placeholder='Modify Country From Map - Default, Kenya' id='country' required></input>\n                    </div>\n                    <div className=\"form-group\">\n                      <Select\n                        styles={customStyles}\n                        name=\"county\"\n                        placeholder={\"Start typing to search county...\"}\n                        options={subCountyData.filter((obj, pos, subCountyData) => {\n                          return subCountyData\n                            .map(mapObj => mapObj.cname)\n                            .indexOf(obj.cname) == pos;\n                        })}\n                        value={selectedCounty}\n                        onChange={handleSetCounty}\n                        getOptionLabel={(subCountyData) => subCountyData.cname}\n                        getOptionValue={(subCountyData) => subCountyData.cname}\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <Select\n                        styles={customStyles}\n                        name=\"subcounty\"\n                        placeholder={\"Type to search sub-county\"}\n                        // options={xCounties.filter(xCounties =>\n                        //     xCounties.ccode === selectedCounty.ccode)}\n                        options={xCounties.filter((obj, pos, xCounties) => {\n                          return xCounties\n                            .map(mapObj => mapObj.scname)\n                            .indexOf(obj.scname) == pos;\n                        })}\n                        value={selectedSubCounty}\n                        // onChange={setSelectedSubCounty}\n                        onChange={handleSetSubCounty}\n                        getOptionLabel={(subCountyData) => subCountyData.scname}\n                        getOptionValue={(subCountyData) => subCountyData.scname}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <Select\n                        styles={customStyles}\n                        name=\"pollingstation\"\n                        placeholder={\"Type to search polling station\"}\n                        options={subCountyData.filter(subCountyData =>\n                          subCountyData.scname === selectedSubCounty.scname)}\n                        value={selectedPollingStation}\n                        onChange={setSelectedPollingStation}\n                        getOptionLabel={(subCountyData) => subCountyData.pollingstation}\n                        getOptionValue={(subCountyData) => subCountyData.pstationid}\n                      />\n                    </div>\n                    {/* <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control form-control-lg\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} placeholder='Enter Search Term' id='question'></input>\n                                </div> */}\n                    <div className=\"template-demo mt-4\">\n                      {/* <button type='button' onClick={handleSubmit} className=\"btn btn-outline-primary\" > Save</button> */}\n                      {/* <button type=\"button\" className='btn btn-outline-success ' onClick={handleSubmit}>LOAD STATION</button> */}\n                      {/* <x className=\"d-flex btn btn-outline-danger btn-lg font-weight-medium auth-form-btn justify-content-center\" onClick={clearForm}>\n                        <i className=\"mdi mdi-reload btn-icon-prepend\"></i>CLEAR SELECTIONS</x> */}\n                      <div className=\"d-flex btn-group\" role=\"group\">\n                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={clearCounty}>\n                          <i className=\"mdi mdi-reload d-block mb-1\"></i>\n                          <span style={{ fontSize: '8px' }}> Reset County </span>\n                        </button>\n                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={clearSubCounty}>\n                          <i className=\"mdi mdi-reload d-block mb-1\"></i>\n                          <span style={{ fontSize: '8px' }}> Reset Sub-County </span>\n                        </button>\n                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={clearStation}>\n                          <i className=\"mdi mdi-reload d-block mb-1\"></i>\n                          <span style={{ fontSize: '8px' }}> Reset Polling Station </span>\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"mt-3\">\n                    </div>\n                  </Form.Group>\n                </div>\n                <div className=\"col-md-7\">\n                  <div id=\"audience-map\" className=\"vector-map\">\n                    <VectorMap\n                      map={\"world_mill\"}\n                      backgroundColor=\"transparent\" //change it to ocean blue: #0077be\n                      panOnDrag={true}\n                      regionsSelectableOne={false}\n                      markersSelectableOne={false}\n                      containerClassName=\"dashboard-vector-map\"\n                      onRegionClick={(e, countryCode) => setCountryCode(countryCode)}\n                      focusOn={{\n                        x: 0.5,\n                        y: 0.5,\n                        scale: 1,\n                        animate: true\n                      }}\n                      series={{\n                        regions: [{\n                          scale: ['#3d3c3c', '#f2f2f2'],\n                          normalizeFunction: 'polynomial',\n                          values: mapData\n                        }]\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n      <br />\n      <div className=\"row \">\n        <div className=\"col-12 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Polling Data </h4>\n              <div className=\"table-responsive\">\n                <form >\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <div className=\"form-check form-check-muted m-0\">\n                            <label className=\"form-check-label\">\n                              <input type=\"checkbox\" className=\"form-check-input\" />\n                              <i className=\"input-helper\"></i>\n                            </label>\n                          </div>\n                        </th>\n                        <th> Candidate </th>\n                        <th> County </th>\n                        <th> Sub-County </th>\n                        <th> Polling Station </th>\n                        {/* <th> Payment Mode </th> */}\n                        <th> Votes </th>\n                        <th> Actions </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {dbPollingData\n                        // .filter(dbPollingData => dbPollingData.pollingstationid === selectedPollingStation.pstationid)\n                        .map((dbPollingData) => (\n                          <Fragment>\n                            {editPollingData === dbPollingData.id ?\n                              <EditRow\n                                editFormData={editFormData}\n                                handleInputChange={handleInputChange}\n                                handleRowEditSubmit={handleRowEditSubmit}\n                                handleCanel={handleCancel}\n                                isLoading={isLoading}\n                              /> :\n                              <PollingDataTable\n                                dbPollingData={dbPollingData}\n                                handleRowEdit={handleRowEdit}\n                                handleDelete={handleDelete}\n                                key={dbPollingData.id}\n                              />\n                            }\n                          </Fragment>\n                        ))}\n\n                      {/* {pollingdata\n                        .filter(pollingdata => pollingdata.pollingstationid === selectedPollingStation.pstationid)\n                        .map((pollingdata) => (\n                          <Fragment>\n                            {editPollingData === pollingdata.id ?\n                              <EditRow\n                                editFormData={editFormData}\n                                handleInputChange={handleInputChange}\n                                handleRowEditSubmit={handleRowEditSubmit}\n                                handleCanel={handleCancel}\n                                isLoading={isLoading}\n                              /> :\n                              <PollingDataTable\n                                pollingdata={pollingdata}\n                                handleRowEdit={handleRowEdit}\n                                handleDelete={handleDelete}\n                                key={pollingdata.id}\n                              />\n                            }\n                          </Fragment>\n                        ))} */}\n\n                    </tbody>\n                  </table>\n                </form>\n              </div>\n              <div>\n                {formPollingStation\n                  // .filter((pollingdata => pollingdata.pollingstationid === selectedPollingStation.pstationid))\n                  .map((selectedFormPollingStation) => (\n                    <> <br />\n                      <h4 > FORM 34 A - {selectedFormPollingStation.pollingstation} </h4>\n                      <div className='d-flex justify-content-center'>\n                        {/* <RichTextEditor\n                          placeholder={\"Form 34A - \" + selectedFormPollingStation.pollingstation}\n                        // onSubmit={printSubmittedValue}\n                        /> */}\n\n                        <Box>\n                          <Box alignSelf=\"start\" direction=\"column\">\n                            {image && (\n                              <Box width=\"full\" align=\"center\">\n                                <Box align=\"end\" background=\"dark-1\" alignSelf=\"stretch\">\n                                  <Button\n                                    icon={<FormClose />}\n                                    onClick={() => {\n                                      setImage(\"\");\n                                      setShowCamera(false);\n                                    }}\n                                  />\n                                </Box>\n                                <Image\n                                  style={{\n                                    maxHeight: \"100%\",\n                                    maxWidth: \"100%\"\n                                  }}\n                                  fit=\"cover\"\n                                  src={image}\n                                />\n                              </Box>\n                            )}\n\n                            {showCamera && (\n                              <CameraModal onClose={() => setShowCamera(false)}>\n                                <WebCamera\n                                  onTakePhoto={(dataUri) => {\n                                    setImage(dataUri);\n                                    console.log(image);\n                                    setShowCamera(false);\n                                  }}\n                                />\n                              </CameraModal>\n                            )}\n                          </Box>\n                          <Keyboard\n                            // onEnter={onEnter}\n                            onKeyDown={(e) => setAllowEnter(e.keyCode !== 16)}\n                          >\n                            <Box\n                              direction=\"row\"\n                              align=\"center\"\n                              pad={{ horizontal: \"xsmall\" }}\n                              border=\"all\"\n                              wrap\n                            >\n                              <Box direction=\"row\" align=\"stretch\">\n                                <Box alignSelf=\"end\" direction=\"row\">\n                                  <Button\n                                    icon={showCamera ? <Close /> : <Camera />}\n                                    onClick={() => setShowCamera(!showCamera)}\n                                  />\n                                  <Button icon={<Gallery />} onClick={openFileDialog} />\n                                  <TextInput\n                                    hidden\n                                    ref={fileInputRef}\n                                    type=\"file\"\n                                    multiple\n                                    onChange={onFilesAdded}\n                                  />\n                                </Box>\n                              </Box>\n\n                              <Box flex style={{ minWidth: \"120px\" }}>\n                                <TextArea\n                                  // {...rest}\n                                  placeholder={\"34A - \" + selectedFormPollingStation.pollingstation}\n                                  size=\"large\"\n                                  plain\n                                  // onChange={changeText}\n                                  value={text}\n                                />\n                              </Box>\n                            </Box>\n                          </Keyboard>\n                        </Box>\n                      </div>\n                      <br />\n                      <div className='d-flex justify-content-center'>\n\n                        {isFormSubmitLoading ?\n                          <ClipLoader color={color} loading={isFormSubmitLoading} cssOverride={override} size={150} />\n                          : <button type=\"button\" className=\"btn btn-outline-success  btn-icon-text btn-lg\" onClick={(e) => handleForm34A(e, selectedFormPollingStation.pollingstationid)}>\n                            <i className=\"mdi mdi-upload btn-icon-prepend\"></i>  <h6>Upload Form 34A </h6><br />\n                            <span style={{ fontSize: '7px' }}> Click here to submit form 34A for </span> <br />\n                            <span style={{ fontSize: '10px' }}>{selectedFormPollingStation.pollingstation}</span>\n                          </button>}\n                      </div>\n                    </>\n                  ))}\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <TinyMCE /> */}\n      {/* <Loading\n        isLoading={isLoading}\n      /> */}\n\n    </div>\n  );\n  // }\n}\n\nexport default Presidential; "],"names":["dbPollingData","handleRowEdit","handleDelete","className","src","require","alt","candidate","cname","scname","pollingstation","votes","type","onClick","e","style","marginRight","id","override","display","margin","borderColor","editFormData","handleInputChange","handleRowEditSubmit","handleCanel","isLoading","useState","color","doNothing","name","value","onChange","placeholder","width","includes","min","backgroundColor","loading","cssOverride","size","deepMerge","grommet","global","colors","brand","error","drop","background","shadowSize","extend","elevation","dark","medium","light","input","weight","font","family","height","button","border","focus","sidebar","text","formField","tab","active","hover","side","children","onClose","Layer","position","modal","onClickOutside","onEsc","Chart","ArcElement","mapData","customStyles","control","base","state","borderRadius","isFocused","boxShadow","menu","marginTop","menuList","padding","useContext","UserContext","token","data","pollingdata","setPollingdata","setIsLoading","isFormSubmitLoading","setIsFormSubmitLoading","timeOut","useRef","countryCode","setCountryCode","kenyaCounties","selectedCounty","setSelectedCounty","selectedSubCounty","setSelectedSubCounty","selectedPollingStation","setSelectedPollingStation","kenyaSubCounties","subCountyData","image","setImage","fileInputRef","showCamera","setShowCamera","setAllowEnter","setShowFormSubmitted","ApiURL","useEffect","fetch","pstationid","method","headers","Headers","then","response","json","setDbPollingData","form","openFileDialog","current","click","onFilesAdded","event","file","target","files","reader","FileReader","onload","img","result","console","log","onabort","onerror","readAsDataURL","xCounties","filter","ccode","pollingstationid","setEditFormData","editPollingData","setEditPollingData","preventDefault","getAttribute","formFieldValue","newFormData","pollingRowData","editFormValues","Math","sign","alert","clearTimeout","setTimeout","editedPollingStation","newPollingData","findIndex","UPDATE_PRESIDENTIAL_URL","_requestOptions","Authorization","_votes","parseInt","axios","handleCancel","index","splice","formPollingStation","obj","pos","map","mapObj","indexOf","defaultValue","required","styles","options","getOptionLabel","getOptionValue","role","fontSize","VectorMap","panOnDrag","regionsSelectableOne","markersSelectableOne","containerClassName","onRegionClick","focusOn","x","y","scale","animate","series","regions","normalizeFunction","values","Fragment","selectedFormPollingStation","alignSelf","direction","align","icon","maxHeight","maxWidth","fit","onTakePhoto","dataUri","onKeyDown","keyCode","pad","horizontal","wrap","hidden","ref","multiple","flex","minWidth","plain","UPDATE_FORM34A","_form","res","catch","handleForm34A"],"sourceRoot":""}